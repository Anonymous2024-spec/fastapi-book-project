name: deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{secrets.HOST_DNS}}
          key: ${{secrets.EC2_SSH_KEY}}
          username: ${{secrets.USERNAME}}
          script: |
            echo "Starting deployment..."

            # Navigate to project directory
            cd fastapi-book-project

            # Pull latest changes
            echo "Pulling latest changes..."
            git fetch --all
            git reset --hard origin/main
            git clean -fd

            # Setup virtual environment
            echo "Setting up virtual environment..."
            if [ ! -d "venv" ]; then
                python3 -m venv venv
            fi
            source venv/bin/activate

            # Upgrade pip and install dependencies
            echo "Installing dependencies..."
            python -m pip install --upgrade pip
            pip install -r requirements.txt

            # Stop existing application
            PID_FILE="app.pid"
            if [ -f "$PID_FILE" ]; then
                if kill -0 $(cat "$PID_FILE") > /dev/null 2>&1; then
                    echo "Stopping existing application..."
                    kill -9 $(cat "$PID_FILE") || true
                fi
                rm -f "$PID_FILE"
            fi

            # Start application
            echo "Starting application..."
            nohup uvicorn main:app --host 0.0.0.0 --port 8000 > app.log 2>&1 & echo $! > "$PID_FILE"

            # Wait for application to start
            timeout=10
            while [ $timeout -gt 0 ]; do
                if curl -s http://localhost:8000/health; then
                    echo "Application started successfully"
                    break
                fi
                sleep 1
                timeout=$((timeout - 1))
            done

            if [ $timeout -eq 0 ]; then
                echo "Application failed to start"
                tail -n 50 app.log
                exit 1
            fi

            echo "Deployment completed successfully"
